var R=Object.defineProperty;var N=(i,e,t)=>e in i?R(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var n=(i,e,t)=>(N(i,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=t(a);fetch(a.href,r)}})();const S={UP:["ArrowUp","w"],DOWN:["ArrowDown","s"],LEFT:["ArrowLeft","a"],RIGHT:["ArrowRight","d"]},v={UP:"DOWN",DOWN:"UP",LEFT:"RIGHT",RIGHT:"LEFT"},y={UP:3*Math.PI/2,DOWN:Math.PI/2,LEFT:Math.PI,RIGHT:0},W=["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"],z=["w","a","s","d"],D=[...W,...z],F=i=>D.includes(i);function u(i){return new Promise((e,t)=>{const s=new Image;s.onload=()=>e(s),s.onerror=a=>t(a),s.src=i})}function O(i){return new Promise((e,t)=>{const s=new Audio(i);s.addEventListener("canplaythrough",()=>e(s),{once:!0}),s.addEventListener("error",a=>t(a),{once:!0})})}class U{constructor(){n(this,"backgroundMusic");n(this,"gameOverSound")}async preloadAudio(){this.backgroundMusic=await O("./background-music.mp3"),this.gameOverSound=await O("./game-over-sound.mp3"),this.backgroundMusic.loop=!0}setAudioVolume(e){this.backgroundMusic.volume=e,this.gameOverSound.volume=e}onGameInit(){this.backgroundMusic.currentTime=0,this.backgroundMusic.play(),this.gameOverSound.currentTime=0,this.gameOverSound.pause()}onGameEnd(){this.backgroundMusic.pause(),this.gameOverSound.play()}}const j=12,K=25,f=15,V=8,Y=20,E=12,C=.5,I=!0,b="SINGLE_PLAYER",k="speed",B="mapSize",x="musicVolume",H="canGoThroughWalls",G="gameMode",w="highScores",l=50,L=3,q=10,$=3,T=5;function Z(i,e){const t=l*i.scale,s=(l-t)/2,a={x:i.x*l+s,y:i.y*l+s,w:t,h:t},r={x:e.x*l,y:e.y*l,w:l,h:l};return!(r.x+r.w<a.x||r.x>a.x+a.w||r.y+r.h<a.y||r.y>a.y+a.h)}function J(i,e){return i==="DOWN"&&e==="LEFT"||i==="RIGHT"&&e==="UP"?Math.PI/2:i==="DOWN"&&e==="RIGHT"||i==="LEFT"&&e==="UP"?Math.PI:i==="UP"&&e==="RIGHT"||i==="LEFT"&&e==="DOWN"?3*Math.PI/2:0}class X{constructor(){n(this,"appleImage");n(this,"snakeBodyImage");n(this,"snakeBodyCornerImage");n(this,"snakeHeadImage");n(this,"snakeTailImage")}async preloadImages(){this.appleImage=await u("./apple.png"),this.snakeBodyImage=await u("./snake-body.png"),this.snakeBodyCornerImage=await u("./snake-body-corner.png"),this.snakeHeadImage=await u("./snake-head.png"),this.snakeTailImage=await u("./snake-tail.png")}}class Q{constructor(e){n(this,"canvas");n(this,"imageHandler",new X);this.canvas=e}get context(){return this.canvas.getContext("2d")}async preloadImages(){return this.imageHandler.preloadImages()}resizeCanvas(e){this.canvas.width=e*l,this.canvas.height=e*l}clearCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}drawBackgroundGrid(e){for(let t=0;t<e;t++)for(let s=0;s<e;s++)this.context.fillStyle=(t+s)%2?"#82b62225":"#ecf87f1b",this.context.fillRect(t*l,s*l,l,l)}drawSnake(e){e.snakeParts.forEach((t,s,a)=>{if(s===0)this.drawImageWithRotation(this.imageHandler.snakeHeadImage,t,y[t.direction],e.color);else if(s===a.length-1)this.drawImageWithRotation(this.imageHandler.snakeTailImage,t,y[t.direction],e.color);else{const r=a[s+1],o=a[s-1],c=r.y===t.y&&o.y===t.y,h=r.x===t.x&&o.x===t.x;c||h?this.drawImageWithRotation(this.imageHandler.snakeBodyImage,t,y[t.direction],e.color):this.drawImageWithRotation(this.imageHandler.snakeBodyCornerImage,t,J(t.direction,r.direction),e.color)}})}drawApple(e,t=0){e.animate(t);const s=l*e.scale,a=(l-s)/2;this.context.drawImage(this.imageHandler.appleImage,e.x*l+a,e.y*l+a,s,s)}drawImageWithRotation(e,t,s,a){const r=t.x*l,o=t.y*l,c=l,h=l,m=r+c/2,_=o+h/2;this.context.save(),this.context.translate(m,_),s&&this.context.rotate(s),this.context.filter=a,this.context.drawImage(e,-c/2,-h/2,c,h),this.context.restore()}}class ee{constructor(e,t){n(this,"_speed");n(this,"_mapSize");n(this,"_volume");n(this,"_canGoThroughWalls");n(this,"_gameMode");n(this,"settingsOverlay");n(this,"audioHandler");this.settingsOverlay=e,this.audioHandler=t,this.gameMode=localStorage.getItem(G)??b,this.speed=Number(localStorage.getItem(k)??E),this.mapSize=Number(localStorage.getItem(B)??f),this.volume=Number(localStorage.getItem(x)??C),this.canGoThroughWalls=localStorage.getItem(H)==="true"||I,this.listenOnEvents()}listenOnEvents(){this.listenOnGameModeChange(),this.listenOnSpeedChange(),this.listenOnMapSizeChange(),this.listenOnCanGoThroughWallsChange(),this.listenVolumeChange(),this.listenOnRestoreDefaultsButtonClick()}listenOnGameModeChange(){this.settingsOverlay.on("gameModeChange",e=>this.gameMode=e)}listenOnSpeedChange(){this.settingsOverlay.on("speedChange",e=>this.speed=e)}listenOnMapSizeChange(){this.settingsOverlay.on("mapSizeChange",e=>this.mapSize=e)}listenOnCanGoThroughWallsChange(){this.settingsOverlay.on("canGoThroughWallsChange",e=>this.canGoThroughWalls=e)}listenVolumeChange(){this.settingsOverlay.on("volumeChange",e=>this.volume=e)}listenOnRestoreDefaultsButtonClick(){this.settingsOverlay.on("restoreDefaultsButtonClick",()=>{this.gameMode=b,this.speed=E,this.mapSize=f,this.volume=C,this.canGoThroughWalls=I})}set gameMode(e){this._gameMode=e,localStorage.setItem(G,e.toString()),this.settingsOverlay.gameModeSelect.value=e}set speed(e){this._speed=e,localStorage.setItem(k,e.toString()),this.settingsOverlay.speedRangeInput.value=e.toString(),this.settingsOverlay.speedValueText.innerText=e.toString()}set mapSize(e){this._mapSize=e,localStorage.setItem(B,e.toString()),this.settingsOverlay.mapSizeRangeInput.value=e.toString(),this.settingsOverlay.mapSizeValueText.innerText=e.toString()}set volume(e){this._volume=e,localStorage.setItem(x,e.toString()),this.audioHandler.setAudioVolume(e),this.settingsOverlay.volumeRangeInput.value=e.toString(),this.settingsOverlay.volumeValueText.innerText=Math.floor(e*100).toString()}set canGoThroughWalls(e){this._canGoThroughWalls=e,localStorage.setItem(H,e.toString()),this.settingsOverlay.canGoThroughWallsCheckboxInput.checked=e}get gameMode(){return this._gameMode}get speed(){return this._speed}get mapSize(){return this._mapSize}get volume(){return this._volume}get canGoThroughWalls(){return this._canGoThroughWalls}get numberOfPlayers(){return this.gameMode==="SINGLE_PLAYER"?1:2}}const A=["UP","DOWN","RIGHT","LEFT"];function te(i,e){return Math.floor(Math.random()*(e-i+1)+i)}function se(){const i=Math.floor(Math.random()*A.length);return A[i]}class P{constructor(e,t){n(this,"coordinates");n(this,"baseScale");n(this,"scale",1);n(this,"pulseTime",0);this.coordinates=e,this.baseScale=t?$:1}get x(){return this.coordinates.x}get y(){return this.coordinates.y}animate(e){this.pulseTime+=e*5e-4,this.baseScale>1?this.baseScale=Math.max(1,this.baseScale-.002):this.baseScale=1;const t=this.baseScale>1?.3:.1,s=(Math.cos(this.pulseTime)-1)*.5*t;this.scale=this.baseScale+s}equals(e){return e.coordinates.x===this.coordinates.x&&e.coordinates.y===this.coordinates.y}}class g{constructor(e,t){n(this,"x");n(this,"y");this.x=e,this.y=t}static fromCoordinate(e){return new g(e.x,e.y)}move(e,t,s){this.moveInDirection(e),s&&(this.x<0&&(this.x=t-1),this.x>=t&&(this.x=0),this.y<0&&(this.y=t-1),this.y>=t&&(this.y=0))}moveTo(e,t){this.x=e,this.y=t}equals(e){return this.x===e.x&&this.y===e.y}isWithinThreshold(e,t){const s=this.x-e.x,a=this.y-e.y;return Math.sqrt(s*s+a*a)<=t}moveInDirection(e){switch(e){case"UP":this.y-=1;break;case"DOWN":this.y+=1;break;case"RIGHT":this.x+=1;break;case"LEFT":this.x-=1;break}}}class p{constructor(e,t){n(this,"coordinates");n(this,"direction");this.coordinates=e,this.direction=t}get x(){return this.coordinates.x}get y(){return this.coordinates.y}move(e,t){this.coordinates.move(this.direction,e,t)}}class ae{constructor(e,t,s,a){n(this,"snakeParts",[]);n(this,"direction");n(this,"color");n(this,"isReady",!1);n(this,"index");this.direction=se(),this.color=s,this.index=a,this.initializeSnake(e,t)}get head(){return this.snakeParts[0]}move(e){this.head.direction=this.direction;for(let t=this.snakeParts.length-1;t>0;t--){const s=this.snakeParts[t];s.coordinates.x=this.snakeParts[t-1].coordinates.x,s.coordinates.y=this.snakeParts[t-1].coordinates.y,s.direction=this.snakeParts[t-1].direction}this.head.move(e.mapSize,e.canGoThroughWalls)}increaseSnakeLength(e){const t=this.snakeParts[this.snakeParts.length-1],s=g.fromCoordinate(t.coordinates);s.move(v[t.direction],e.mapSize,e.canGoThroughWalls),this.snakeParts.push(new p(s,t.direction))}isCoordinatePartOfSnake(e){return this.snakeParts.some(t=>t.coordinates.equals(e))}hasSelfCollision(){return this.snakeParts.filter(e=>e.x===this.head.x&&e.y===this.head.y).length===2}initializeSnake(e,t){const s=new p(e,this.direction);this.snakeParts.push(s);for(let a=1;a<L;a++){const r=g.fromCoordinate(s.coordinates);for(let o=0;o<a;o++)r.move(v[this.direction],t.mapSize,t.canGoThroughWalls);this.snakeParts.push(new p(r,this.direction))}}}class ne{constructor(e){n(this,"gameSettings");n(this,"snakes",[]);n(this,"apples",[]);this.gameSettings=e}clear(){this.snakes=[],this.apples=[]}initialize(){this.clear(),this.placeSnakes(),this.placeApples()}moveSnakes(){this.snakes.forEach(e=>e.move(this.gameSettings))}checkSnakeCollision(){return this.snakes.filter((e,t,s)=>{const a=e.head.x>=this.gameSettings.mapSize||e.head.x<0||e.head.y>=this.gameSettings.mapSize||e.head.y<0,r=e.hasSelfCollision(),c=s.filter((h,m)=>m!==t).some(h=>h.isCoordinatePartOfSnake(e.head.coordinates));return!!(!this.gameSettings.canGoThroughWalls&&a||r||c)})}checkAppleEating(){const e=[];for(let t of this.snakes)for(let s of this.apples)Z(s,t.head)&&e.push({eatenApple:s,eatenBySnake:t});return e}replaceApple(e,t){const s=this.apples.findIndex(a=>a.equals(e));this.apples[s]=new P(this.getRandomFreeCoordinate(),t)}isEverySnakeReady(){return this.snakes.every(e=>e.isReady)}placeSnakes(){for(let e=0;e<this.gameSettings.numberOfPlayers;e++){const t=e%2===0?"none":"hue-rotate(325deg)";this.snakes.push(new ae(this.getRandomFreeCoordinate(L),this.gameSettings,t,e))}}placeApples(e=!1){for(let t=0;t<this.gameSettings.numberOfPlayers;t++)this.apples.push(new P(this.getRandomFreeCoordinate(),e))}getAvailableCoordinates(e=0){const t=[];for(let s=e;s<this.gameSettings.mapSize-e;s++)for(let a=e;a<this.gameSettings.mapSize-e;a++){const r=new g(s,a),o=this.apples.some(h=>h.coordinates.equals(r)),c=this.snakes.some(h=>e?h.head.coordinates.isWithinThreshold(r,e):h.isCoordinatePartOfSnake(r));o||c||t.push(r)}return t}getRandomFreeCoordinate(e=0){const t=this.getAvailableCoordinates(e);return t[te(0,t.length-1)]}}class M{constructor(){n(this,"events");this.events={}}on(e,t){this.events[e]||(this.events[e]=[]),this.events[e].push(t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(s=>s!==t))}emit(e,...t){this.events[e]&&this.events[e].forEach(s=>s(...t))}}class d extends M{constructor(t){super();n(this,"containerId");n(this,"isActivated",!1);n(this,"eventListenersAbortController");this.containerId=t}get container(){return document.getElementById(this.containerId)}get abortSignal(){return this.eventListenersAbortController.signal}activate(){this.isActivated||(this.eventListenersAbortController=new AbortController,this.container.classList.add("active"),this.listenOnEvents(),this.isActivated=!0)}deactivate(){this.isActivated&&(this.eventListenersAbortController.abort(),this.container.classList.remove("active"),this.isActivated=!1)}}class ie extends d{get singlePlayerHint(){return document.getElementById("single-player-hint")}get multiplayerHint(){return document.getElementById("multiplayer-hint")}get tickContainers(){return document.getElementsByClassName("tick-container")}get snakeHeadIcons(){return document.getElementsByClassName("snake-head-icon")}constructor(){super("before-play-overlay")}listenOnEvents(){Array.from(this.tickContainers).forEach(e=>e.classList.remove("ticked"))}showHint(e,t){e==="SINGLE_PLAYER"?(this.singlePlayerHint.style.display="flex",this.multiplayerHint.style.display="none"):(this.singlePlayerHint.style.display="none",this.multiplayerHint.style.display="flex",Array.from(this.snakeHeadIcons).forEach((s,a)=>s.style.filter=t[a].color))}tickPlayerHint(e){var t,s;(s=(t=document.getElementsByClassName("tick-container")[e])==null?void 0:t.classList)==null||s.add("ticked")}}class re extends d{get restartButton(){return document.getElementById("restart-game-button")}get mainMenuButton(){return document.getElementById("main-menu-button")}get finalScoreContainer(){return document.getElementById("final-score-container")}get finalScoreText(){return document.getElementById("final-score")}get finalAppleCountText(){return document.getElementById("final-apple-count")}get winnerContainer(){return document.getElementById("winner-container")}get drawText(){return document.getElementById("draw-text")}get winnerText(){return document.getElementById("winner-text")}constructor(){super("game-over-overlay")}listenOnEvents(){this.finalScoreContainer.style.display="none",this.winnerContainer.style.display="none",this.drawText.style.display="none",this.winnerText.style.display="none",this.restartButton.addEventListener("click",()=>this.emit("restartButtonClick"),{signal:this.abortSignal}),this.mainMenuButton.addEventListener("click",()=>this.emit("mainMenuButtonClick"),{signal:this.abortSignal})}onGameEnd(e,t,s){s?(this.winnerContainer.style.display="block",s.length===0?this.drawText.style.display="block":(this.winnerText.style.display="block",this.winnerText.innerText=`Player ${s[0].index+1} wins`)):(this.finalScoreContainer.style.display="flex",this.finalScoreText.textContent=e.toString(),this.finalAppleCountText.textContent=t.toString())}}class oe extends d{constructor(){super("game-paused-overlay")}listenOnEvents(){}}class le extends d{get backButton(){return document.getElementById("scoreboard-back-button")}get pvpScore(){return document.getElementById("pvp-score")}get pveScore(){return document.getElementById("pve-score")}get noScoresText(){return document.getElementById("no-scores-text")}get scoreboardTableBody(){return document.getElementById("scoreboard-table-body")}get scoreGameModeSelect(){return document.getElementById("score-game-mode-select")}constructor(){super("scoreboard-overlay")}listenOnEvents(){this.clearAll(),this.backButton.addEventListener("click",()=>this.emit("backButtonClick"),{signal:this.abortSignal}),this.scoreGameModeSelect.addEventListener("change",e=>this.emit("scoreGameModeChange",e.target.value),{signal:this.abortSignal})}showPvpScores(e){this.clearAll(),e.length>0?(this.pvpScore.style.display="flex",e.forEach((t,s)=>{const a=document.createElement("h3");a.innerText=`Player ${s+1} wins: ${t??0}`,this.pvpScore.appendChild(a)})):this.noScoresText.style.display="block"}showPveScores(e){this.clearAll(),e.length>0?(this.pveScore.style.display="block",e.forEach((t,s)=>{const a=document.createElement("tr"),r=document.createElement("td"),o=document.createElement("td"),c=document.createElement("td");r.innerText=`${s+1}.`,o.innerText=t.score.toString(),c.innerText=t.appleCount.toString(),a.appendChild(r),a.appendChild(o),a.appendChild(c),this.scoreboardTableBody.appendChild(a)})):this.noScoresText.style.display="block"}clearAll(){this.noScoresText.style.display="none",this.pvpScore.style.display="none",this.pveScore.style.display="none",this.pvpScore.innerHTML="",this.scoreboardTableBody.innerHTML=""}}class ce extends d{get backButton(){return document.getElementById("back-button")}get restoreDefaultsButton(){return document.getElementById("restore-defaults-button")}get gameModeSelect(){return document.getElementById("game-mode-select")}get speedRangeInput(){return document.getElementById("speed-range")}get mapSizeRangeInput(){return document.getElementById("map-size-range")}get canGoThroughWallsCheckboxInput(){return document.getElementById("walls-checkbox")}get volumeRangeInput(){return document.getElementById("music-volume-range")}get volumeValueText(){return document.getElementById("volume-value-text")}get speedValueText(){return document.getElementById("speed-value-text")}get mapSizeValueText(){return document.getElementById("map-size-value-text")}constructor(){super("settings-overlay"),this.speedRangeInput.min=V.toString(),this.speedRangeInput.max=Y.toString(),this.mapSizeRangeInput.min=j.toString(),this.mapSizeRangeInput.max=K.toString()}listenOnEvents(){this.backButton.addEventListener("click",()=>this.emit("settingsBackButtonClick"),{signal:this.abortSignal}),this.restoreDefaultsButton.addEventListener("click",()=>this.emit("restoreDefaultsButtonClick"),{signal:this.abortSignal}),this.gameModeSelect.addEventListener("change",e=>this.emit("gameModeChange",e.target.value),{signal:this.abortSignal}),this.speedRangeInput.addEventListener("input",e=>this.emit("speedChange",Number(e.target.value),{signal:this.abortSignal})),this.mapSizeRangeInput.addEventListener("input",e=>(this.emit("mapSizeChange",Number(e.target.value)),{signal:this.abortSignal})),this.volumeRangeInput.addEventListener("input",e=>this.emit("volumeChange",Number(e.target.value),{signal:this.abortSignal})),this.canGoThroughWallsCheckboxInput.addEventListener("change",e=>this.emit("canGoThroughWallsChange",e.target.checked),{signal:this.abortSignal})}}class he extends d{get playButton(){return document.getElementById("play-button")}get settingsButton(){return document.getElementById("settings-button")}get scoreboardButton(){return document.getElementById("scoreboard-button")}constructor(){super("start-game-overlay")}listenOnEvents(){this.playButton.addEventListener("click",()=>this.emit("playButtonClick"),{signal:this.abortSignal}),this.settingsButton.addEventListener("click",()=>this.emit("settingsButtonClick"),{signal:this.abortSignal}),this.scoreboardButton.addEventListener("click",()=>this.emit("scoreboardButton"),{signal:this.abortSignal})}}class de extends d{get endGameButton(){return document.getElementById("end-game-button")}get pauseGameButton(){return document.getElementById("pause-game-button")}get continueGameButton(){return document.getElementById("continue-game-button")}get currentScoreText(){return document.getElementById("current-score")}get appleCountText(){return document.getElementById("apple-count")}get pveInfos(){return document.getElementsByClassName("pve-info")}constructor(){super("top-bar-overlay")}listenOnEvents(){Array.from(this.pveInfos).forEach(e=>e.style.visibility="hidden"),this.pauseGameButton.style.display="none",this.continueGameButton.style.display="none",this.endGameButton.addEventListener("click",()=>this.emit("endGameButtonClick"),{signal:this.abortSignal}),this.pauseGameButton.addEventListener("click",()=>{this.emit("pauseGameButtonClick"),this.continueGameButton.style.display="inline",this.pauseGameButton.style.display="none"},{signal:this.abortSignal}),this.continueGameButton.addEventListener("click",()=>{this.emit("continueGameButtonClick"),this.pauseGameButton.style.display="inline",this.continueGameButton.style.display="none"},{signal:this.abortSignal})}onPlay(e){this.pauseGameButton.style.display="inline",e!=="PVP"&&Array.from(this.pveInfos).forEach(t=>t.style.visibility="visible")}}class ue extends M{constructor(){super();n(this,"startGameOverlay",new he);n(this,"topBarOverlay",new de);n(this,"settingsOverlay",new ce);n(this,"beforePlayOverlay",new ie);n(this,"gamePausedOverlay",new oe);n(this,"gameOverOverlay",new re);n(this,"scoreboardOverlay",new le);this.switchOverlay([this.startGameOverlay]),this.startGameOverlay.on("playButtonClick",()=>{this.emit("playButtonClick"),this.switchOverlay([this.beforePlayOverlay,this.topBarOverlay])}),this.startGameOverlay.on("settingsButtonClick",()=>this.switchOverlay([this.settingsOverlay])),this.startGameOverlay.on("scoreboardButton",()=>{this.switchOverlay([this.scoreboardOverlay]),this.emit("scoreboardButtonClick")}),this.scoreboardOverlay.on("backButtonClick",()=>this.switchOverlay([this.startGameOverlay])),this.settingsOverlay.on("settingsBackButtonClick",()=>this.switchOverlay([this.startGameOverlay])),this.topBarOverlay.on("endGameButtonClick",()=>{this.switchOverlay([this.gameOverOverlay]),this.emit("endGameButtonClick")}),this.topBarOverlay.on("pauseGameButtonClick",()=>{this.switchOverlay([this.gamePausedOverlay,this.topBarOverlay]),this.emit("pauseGameButtonClick")}),this.topBarOverlay.on("continueGameButtonClick",()=>{this.switchOverlay([this.topBarOverlay]),this.emit("continueGameButtonClick")}),this.gameOverOverlay.on("restartButtonClick",()=>{this.switchOverlay([this.beforePlayOverlay,this.topBarOverlay]),this.emit("restartButtonClick")}),this.gameOverOverlay.on("mainMenuButtonClick",()=>{this.switchOverlay([this.startGameOverlay]),this.emit("mainMenuButtonClick")})}onPlay(t){this.switchOverlay([this.topBarOverlay]),this.topBarOverlay.onPlay(t)}onGameOver(t,s,a){this.switchOverlay([this.gameOverOverlay]),this.gameOverOverlay.onGameEnd(t,s,a)}switchOverlay(t){[this.startGameOverlay,this.settingsOverlay,this.gameOverOverlay,this.topBarOverlay,this.gamePausedOverlay,this.beforePlayOverlay,this.scoreboardOverlay].forEach(s=>{t.includes(s)?s.activate():s.deactivate()})}}class ge{constructor(e,t){n(this,"_score");n(this,"_appleCount");n(this,"_highScores");n(this,"topBarOverlay");n(this,"scoreboardOverlay");this.topBarOverlay=e,this.scoreboardOverlay=t;const s={pvpWins:[],pveHighScores:[],singlePlayerHighScores:[]};this.highScores=JSON.parse(localStorage.getItem(w)??JSON.stringify(s)),this.scoreboardOverlay.on("scoreGameModeChange",a=>this.showHighScores(a)),this.initialize()}get score(){return this._score}get appleCount(){return this._appleCount}get highScores(){return this._highScores}set score(e){this._score=e,this.topBarOverlay.currentScoreText.textContent=e.toString()}set appleCount(e){this._appleCount=e,this.topBarOverlay.appleCountText.textContent=e.toString()}set highScores(e){this._highScores=e,localStorage.setItem(w,JSON.stringify(e))}initialize(){this.score=0,this.appleCount=0}increaseScore(e,t){++this.appleCount,this.score=Math.floor(this.score+e*Math.pow(t,2))}isNextAppleSpecial(){return(this.appleCount+1)%q===0}showHighScores(e){switch(e){case"PVE":this.scoreboardOverlay.showPveScores(this.highScores.pveHighScores);break;case"SINGLE_PLAYER":this.scoreboardOverlay.showPveScores(this.highScores.singlePlayerHighScores);break;case"PVP":default:this.scoreboardOverlay.showPvpScores(this.highScores.pvpWins)}}storeScore(e,t){const{pveHighScores:s,pvpWins:a,singlePlayerHighScores:r}=this.highScores;switch(e){case"PVE":this.addPveHighScore(s);break;case"SINGLE_PLAYER":this.addPveHighScore(r);break;case"PVP":default:t&&t.length===1&&(a[t[0].index]=(a[t[0].index]??0)+1)}this.highScores={pveHighScores:s,pvpWins:a,singlePlayerHighScores:r}}addPveHighScore(e){e.push({appleCount:this.appleCount,score:this.score,timestamp:new Date().toLocaleDateString()}),e.sort((t,s)=>s.score-t.score),e.length>T&&(e.length=T)}}class me{constructor(){n(this,"canvas",document.getElementById("game-canvas"));n(this,"gameWrapper",document.getElementById("game-wrapper"));n(this,"pageWrapper",document.getElementById("page-wrapper"));n(this,"gameIntervalId",NaN);n(this,"lastDrawTime",0);n(this,"overlayHandler");n(this,"audioHandler");n(this,"canvasHandler");n(this,"gameSettings");n(this,"objectHandler");n(this,"scoreHandler");n(this,"startGameAbortController",new AbortController);n(this,"AbortController",new AbortController);this.audioHandler=new U,this.canvasHandler=new Q(this.canvas),Promise.all([this.canvasHandler.preloadImages(),this.audioHandler.preloadAudio()]).then(()=>{this.resizeGame(),window.addEventListener("resize",()=>this.resizeGame()),this.overlayHandler=new ue,this.gameSettings=new ee(this.overlayHandler.settingsOverlay,this.audioHandler),this.objectHandler=new ne(this.gameSettings),this.scoreHandler=new ge(this.overlayHandler.topBarOverlay,this.overlayHandler.scoreboardOverlay),this.overlayHandler.on("playButtonClick",()=>this.onPlayButtonClick()),this.overlayHandler.on("scoreboardButtonClick",()=>this.onScoreboardButtonClick()),this.overlayHandler.on("endGameButtonClick",()=>this.endGame(this.gameSettings.gameMode==="PVP"?[]:void 0)),this.overlayHandler.on("pauseGameButtonClick",()=>this.pauseGame()),this.overlayHandler.on("continueGameButtonClick",()=>this.continueGame()),this.overlayHandler.on("restartButtonClick",()=>{this.initializeGame(),this.onPlayButtonClick()}),this.overlayHandler.on("mainMenuButtonClick",()=>this.initializeGame()),document.addEventListener("keydown",this.keyDownHandler.bind(this)),this.initializeGame()}).catch(e=>console.error("Error while loading assets:",e))}initializeGame(){this.canvasHandler.resizeCanvas(this.gameSettings.mapSize),this.objectHandler.clear(),this.scoreHandler.initialize(),this.redrawCanvas(),this.audioHandler.onGameInit()}onScoreboardButtonClick(){this.overlayHandler.scoreboardOverlay.scoreGameModeSelect.value=this.gameSettings.gameMode,this.scoreHandler.showHighScores(this.gameSettings.gameMode)}onPlayButtonClick(){this.canvasHandler.resizeCanvas(this.gameSettings.mapSize),this.objectHandler.initialize(),this.overlayHandler.beforePlayOverlay.showHint(this.gameSettings.gameMode,this.objectHandler.snakes),this.redrawCanvas(),this.startGameAbortController=new AbortController,document.addEventListener("keydown",this.startGameKeydownHandler.bind(this),{signal:this.startGameAbortController.signal})}startGame(){requestAnimationFrame(e=>this.draw(e)),this.audioHandler.backgroundMusic.play(),this.overlayHandler.onPlay(this.gameSettings.gameMode)}pauseGame(){this.audioHandler.backgroundMusic.pause(),window.cancelAnimationFrame(this.gameIntervalId)}continueGame(){this.audioHandler.backgroundMusic.play(),requestAnimationFrame(e=>this.draw(e))}resizeGame(){const e=Math.min(this.pageWrapper.clientWidth,this.pageWrapper.clientHeight);this.gameWrapper.style.maxWidth=`${e}px`,this.gameWrapper.style.maxHeight=`${e}px`}endGame(e){this.audioHandler.onGameEnd(),this.startGameAbortController.abort(),window.cancelAnimationFrame(this.gameIntervalId),this.gameIntervalId=NaN,this.overlayHandler.onGameOver(this.scoreHandler.score,this.scoreHandler.appleCount,e),this.scoreHandler.storeScore(this.gameSettings.gameMode,e)}redrawCanvas(e){this.canvasHandler.clearCanvas(),this.canvasHandler.drawBackgroundGrid(this.gameSettings.mapSize),this.objectHandler.apples.forEach(t=>this.canvasHandler.drawApple(t,e)),this.objectHandler.snakes.forEach(t=>this.canvasHandler.drawSnake(t))}draw(e){this.gameIntervalId=window.requestAnimationFrame(o=>this.draw(o));const t=e-this.lastDrawTime;if(this.redrawCanvas(t),t/1e3<1/this.gameSettings.speed)return;this.lastDrawTime=e,this.objectHandler.moveSnakes(),this.objectHandler.checkAppleEating().forEach(({eatenApple:o,eatenBySnake:c})=>{this.scoreHandler.increaseScore(this.gameSettings.speed,o.baseScale),c.increaseSnakeLength(this.gameSettings),this.objectHandler.replaceApple(o,this.scoreHandler.isNextAppleSpecial())});const a=this.objectHandler.checkSnakeCollision();if(a.length>0){const o=this.gameSettings.gameMode==="PVP"?this.objectHandler.snakes.filter(c=>!a.includes(c)):void 0;this.redrawCanvas(),this.endGame(o)}}keyDownHandler(e){const t=this.getDirectionByKey(e.key);t&&(e.preventDefault(),t.snake.direction=t.direction)}startGameKeydownHandler(e){const t=this.getDirectionByKey(e.key);t&&(e.preventDefault(),this.overlayHandler.beforePlayOverlay.tickPlayerHint(t.snake.index),t.snake.isReady=!0,this.objectHandler.isEverySnakeReady()&&(this.startGameAbortController.abort(),this.startGame()))}getDirectionByKey(e){if(F(e)&&this.objectHandler.snakes.length>0){let t;for(t in S){const s=S[t].findIndex(r=>r===e);if(s===-1)continue;const a=this.objectHandler.snakes[s]??this.objectHandler.snakes[0];if(t!==v[a.head.direction])return{direction:t,snake:a}}}}}new me;
